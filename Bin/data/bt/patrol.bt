{
	"root": {
			"rootName": "patrol",
			"type": "priority",
			"condition": "nullptr",
			"action": "",
			"assert": ""
		},
	"children": [{
			"parent": "patrol",
			"name": "manageStun",
			"type": "priority",
			"condition": "conditionManageStun",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageStun",
			"name": "shadowMerged",
			"type": "action",
			"condition": "conditionShadowMerged",
			"action": "actionShadowMerged",
			"assert": ""
		}, {
			"parent": "manageStun",
			"name": "manageFixed",
			"type": "sequence",
			"condition": "conditionFixed",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageStun",
			"name": "stunned",
			"type": "action",
			"condition": "",
			"action": "actionStunned",
			"assert": ""
		}, {
			"parent": "manageFixed",
			"name": "fixed",
			"type": "action",
			"condition": "",
			"action": "actionFixed",
			"assert": ""
		}, {
			"parent": "manageFixed",
			"name": "beginAlertFixed",
			"type": "action",
			"condition": "",
			"action": "actionBeginAlert",
			"assert": ""
		}, {
			"parent": "manageFixed",
			"name": "closestWptFixed",
			"type": "action",
			"condition": "",
			"action": "actionClosestWpt",
			"assert": ""
		}, {
			"parent": "patrol",
			"name": "endAlertRoot",
			"type": "action",
			"condition": "conditionEndAlert",
			"action": "actionEndAlert",
			"assert": ""
		}, {
			"parent": "patrol",
			"name": "manageDoPatrol",
			"type": "priority",
			"condition": "",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageDoPatrol",
			"name": "manageArtificialNoise",
			"type": "sequence",
			"condition": "conditionIsArtificialNoise",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageArtificialNoise",
			"name": "markArtificialNoiseAsInactive",
			"type": "action",
			"condition": "",
			"action": "actionMarkNoiseAsInactive",
			"assert": ""
		}, {
			"parent": "manageArtificialNoise",
			"name": "generateNavmeshNoise",
			"type": "action",
			"condition": "",
			"action": "actionGenerateNavmeshNoise",
			"assert": ""
		}, {
			"parent": "manageArtificialNoise",
			"name": "goToArtificialNoiseSource",
			"type": "action",
			"condition": "",
			"action": "actionGoToNoiseSource",
			"actionArg": [{
					"variable_name": "speed",
					"variable_type": "float",
					"variable_value": 3.5,
					"variable_op": ""
				}, {
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}, {
					"variable_name": "autoChaseDistance",
					"variable_type": "float",
					"variable_value": 15.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}
			],
			"assert": ""
		}, {
			"parent": "manageArtificialNoise",
			"name": "waitInArtificialNoiseSource",
			"type": "action",
			"condition": "",
			"action": "actionWaitInNoiseSource",
			"actionArg": [{
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}, {
					"variable_name": "autoChaseDistance",
					"variable_type": "float",
					"variable_value": 15.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}
			],
			"assert": "assertNotHeardArtificialNoise"
		}, {
			"parent": "manageDoPatrol",
			"name": "managePlayerSeen",
			"type": "priority",
			"condition": "conditionPlayerSeen",
			"conditionArg": [{
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 20.0,
					"variable_op": ""
				}
			],
			"action": "",
			"assert": ""
		}, {
			"parent": "manageDoPatrol",
			"name": "manageNaturalNoise",
			"type": "sequence",
			"condition": "conditionIsNaturalNoise",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageNaturalNoise",
			"name": "markNaturalNoiseAsInactive",
			"type": "action",
			"condition": "",
			"action": "actionMarkNoiseAsInactive",
			"assert": ""
		}, {
			"parent": "manageNaturalNoise",
			"name": "rotateToNoiseSource",
			"type": "action",
			"condition": "",
			"action": "actionRotateToNoiseSource",
			"actionArg": [{
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 300.0,
					"variable_op": ""
				}
			],
			"assert": "assertNotPlayerInFovNorArtificialNoise",
			"assertArg": [{
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 110.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 19.0,
					"variable_op": ""
				}
			]
		}, {
			"parent": "manageDoPatrol",
			"name": "managePlayerWasSeen",
			"type": "sequence",
			"condition": "conditionPlayerWasSeen",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageDoPatrol",
			"name": "managePatrolSeen",
			"type": "sequence",
			"condition": "conditionPatrolSeen",
			"conditionArg": [{
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 20.0,
					"variable_op": ""
				}
			],
			"action": "",
			"assert": ""
		}, {
			"parent": "manageDoPatrol",
			"name": "managePatrolGoToWpt",
			"type": "sequence",
			"condition": "conditionGoToWpt",
			"action": "",
			"assert": ""
		}, {
			"parent": "managePatrolGoToWpt",
			"name": "generateNavmeshWpt",
			"type": "action",
			"condition": "",
			"action": "actionGenerateNavmeshWpt",
			"assert": ""
		}, {
			"parent": "managePatrolGoToWpt",
			"name": "goToWpt",
			"type": "action",
			"condition": "",
			"action": "actionGoToWpt",
			"actionArg": [{
					"variable_name": "speed",
					"variable_type": "float",
					"variable_value": 3.5,
					"variable_op": ""
				}, {
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}
			],
			"assert": "assertPlayerAndPatrolNotInFovNotNoise"
		}, {
			"parent": "manageDoPatrol",
			"name": "waitInWpt",
			"type": "action",
			"condition": "conditionWaitInWpt",
			"action": "actionWaitInWpt",
			"actionArg": [{
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}
			],
			"assert": "assertPlayerAndPatrolNotInFovNotNoise"
		}, {
			"parent": "manageDoPatrol",
			"name": "nextWpt",
			"type": "action",
			"condition": "",
			"action": "actionNextWpt",
			"assert": ""
		}, {
			"parent": "managePlayerSeen",
			"name": "manageChase",
			"type": "sequence",
			"condition": "conditionChase",
			"action": "",
			"assert": ""
		}, {
			"parent": "managePlayerSeen",
			"name": "suspect",
			"type": "action",
			"condition": "",
			"action": "actionSuspect",
			"actionArg": [{
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "autoChaseDistance",
					"variable_type": "float",
					"variable_value": 15.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 20.0,
					"variable_op": ""
				}, {
					"variable_name": "dcrSuspectO_Meter",
					"variable_type": "float",
					"variable_value": 0.3,
					"variable_op": ""
				}, {
					"variable_name": "incrBaseSuspectO_Meter",
					"variable_type": "float",
					"variable_value": 0.5,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": "assertNotHeardArtificialNoise"
		}, {
			"parent": "manageChase",
			"name": "markPlayerAsSeen",
			"type": "action",
			"condition": "",
			"action": "actionMarkPlayerAsSeen",
			"actionArg": [{
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": ""
		}, {
			"parent": "manageChase",
			"name": "shootInhibitor",
			"type": "action",
			"condition": "",
			"action": "actionShootInhibitor",
			"actionArg": [{
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": ""
		}, {
			"parent": "manageChase",
			"name": "beginAlertChase",
			"type": "action",
			"condition": "",
			"action": "actionBeginAlert",
			"assert": ""
		}, {
			"parent": "manageChase",
			"name": "generateNavmeshChase",
			"type": "action",
			"condition": "",
			"action": "actionGenerateNavmeshChase",
			"assert": ""
		}, {
			"parent": "manageChase",
			"name": "manageGoingToAttack",
			"type": "priority",
			"condition": "",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageGoingToAttack",
			"name": "managePlayerAttacked",
			"type": "sequence",
			"condition": "conditionPlayerAttacked",
			"conditionArg": [{
					"variable_name": "distToAttack",
					"variable_type": "float",
					"variable_value": 1.5,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"action": "",
			"assert": ""
		}, {
			"parent": "manageGoingToAttack",
			"name": "ChasePlayer",
			"type": "action",
			"condition": "",
			"action": "actionChasePlayer",
			"actionArg": [{
					"variable_name": "speed",
					"variable_type": "float",
					"variable_value": 3.5,
					"variable_op": ""
				}, {
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 300.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 20.0,
					"variable_op": ""
				}, {
					"variable_name": "distToAttack",
					"variable_type": "float",
					"variable_value": 1.5,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": ""
		}, {
			"parent": "managePlayerAttacked",
			"name": "attack",
			"type": "action",
			"condition": "",
			"action": "actionAttack",
			"actionArg": [{
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": ""
		}, {
			"parent": "managePlayerAttacked",
			"name": "endAlertAttacked",
			"type": "action",
			"condition": "",
			"action": "actionEndAlert",
			"assert": ""
		}, {
			"parent": "managePlayerAttacked",
			"name": "closestWptAttacked",
			"type": "action",
			"condition": "",
			"action": "actionClosestWpt",
			"assert": ""
		}, {
			"parent": "managePlayerWasSeen",
			"name": "resetPlayerWasSeenVariables",
			"type": "action",
			"condition": "",
			"action": "actionResetPlayerWasSeenVariables",
			"assert": ""
		}, {
			"parent": "managePlayerWasSeen",
			"name": "goToPlayerLastPos",
			"type": "action",
			"condition": "",
			"action": "actionGoToPlayerLastPos",
			"actionArg": [{
					"variable_name": "speed",
					"variable_type": "float",
					"variable_value": 3.5,
					"variable_op": ""
				}, {
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 35.0,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": "assertPlayerNotInFovNorNoise"
		}, {
			"parent": "managePlayerWasSeen",
			"name": "lookForPlayerSeen",
			"type": "action",
			"condition": "",
			"action": "actionLookForPlayer",
			"actionArg": [{
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "fov",
					"variable_type": "float",
					"variable_value": 120.0,
					"variable_op": ""
				}, {
					"variable_name": "maxRotationSeekingPlayer",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "maxChaseDistance",
					"variable_type": "float",
					"variable_value": 35.0,
					"variable_op": ""
				}, {
					"variable_name": "entityToChase",
					"variable_type": "string",
					"variable_value": "The Player",
					"variable_op": ""
				}
			],
			"assert": "assertPlayerNotInFovNorNoise"
		}, {
			"parent": "managePlayerWasSeen",
			"name": "closestWptPlayerSeen",
			"type": "action",
			"condition": "",
			"action": "actionClosestWpt",
			"assert": ""
		}, {
			"parent": "managePatrolSeen",
			"name": "generateNavmeshGoToPatrol",
			"type": "action",
			"condition": "",
			"action": "actionGenerateNavmeshGoToPatrol",
			"assert": ""
		}, {
			"parent": "managePatrolSeen",
			"name": "goToPatrol",
			"type": "action",
			"condition": "",
			"action": "actionGoToPatrol",
			"actionArg": [{
					"variable_name": "speed",
					"variable_type": "float",
					"variable_value": 3.5,
					"variable_op": ""
				}, {
					"variable_name": "rotationSpeed",
					"variable_type": "float",
					"variable_value": 90.0,
					"variable_op": ""
				}, {
					"variable_name": "distToAttack",
					"variable_type": "float",
					"variable_value": 1.5,
					"variable_op": ""
				}
			],
			"assert": "assertPlayerNotInFov"
		}, {
			"parent": "managePatrolSeen",
			"name": "manageInPatrolPos",
			"type": "priority",
			"condition": "",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageInPatrolPos",
			"name": "manageFixPatrol",
			"type": "sequence",
			"condition": "conditionFixPatrol",
			"action": "",
			"assert": ""
		}, {
			"parent": "manageFixPatrol",
			"name": "fixPatrol",
			"type": "action",
			"condition": "",
			"action": "actionFixPatrol",
			"assert": ""
		}, {
			"parent": "manageFixPatrol",
			"name": "beginAlertPatrolSeen",
			"type": "action",
			"condition": "",
			"action": "actionBeginAlert",
			"assert": ""
		}, {
			"parent": "manageFixPatrol",
			"name": "closestWptPatrolSeen",
			"type": "action",
			"condition": "",
			"action": "actionClosestWpt",
			"assert": ""
		}, {
			"parent": "manageInPatrolPos",
			"name": "managePatrolLost",
			"type": "sequence",
			"condition": "",
			"action": "",
			"assert": ""
		}, {
			"parent": "managePatrolLost",
			"name": "markPatrolAsLost",
			"type": "action",
			"condition": "",
			"action": "actionMarkPatrolAsLost",
			"assert": ""
		}, {
			"parent": "managePatrolLost",
			"name": "lookForPlayerPatrolWasSeen",
			"type": "action",
			"condition": "",
			"action": "actionLookForPlayer",
			"assert": "assertPlayerAndPatrolNotInFovNotNoise"
		}, {
			"parent": "managePatrolLost",
			"name": "closestWptPatrolWasSeen",
			"type": "action",
			"condition": "",
			"action": "actionClosestWpt",
			"assert": ""
		}
	]
}